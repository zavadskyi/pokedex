{"version":3,"sources":["components/Header/Header.js","service/service.js","components/helpers.js","components/Badge/Badge.js","components/PokemonItem/PokemonItem.js","components/Button/Button.js","components/PockemonList/PokemonList.js","components/PokemonDetails/PokemonDetails.js","components/Spinner/Spinner.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["Header","text","className","_baseApiURL","getData","url","a","fetch","res","ok","Error","status","json","typeColors","bug","dragon","fairy","fire","ghost","ground","normal","pyschic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","psychic","capitalize","s","charAt","toUpperCase","slice","Badge","types","map","i","type","key","style","backgroundColor","name","PokemonItem","pokemon","onShowSinglePokemon","onClick","id","src","alt","Button","width","e","PokemonList","onShowMore","console","log","length","p","PokemonDetails","singlePokemon","stats","weight","moves","base_stat","Spinner","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","Filter","showPokemonByType","classes","useState","setType","React","pokemonTypes","setPokemonTypes","useEffect","response","results","getTypes","FormControl","InputLabel","Select","labelId","value","onChange","event","target","idx","MenuItem","App","pokenonData","setPokemonData","filterPokenonData","setFilterPokemonData","nextUrl","setNextUrl","loading","setLoading","isSelected","setIsSelected","isFiltered","setIsFiltered","error","setError","setSinglePokemon","next","loadPokemon","fetchData","data","Promise","all","pokemonRecord","_pokemonData","filteredData","filter","some","el","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8fac7943.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.scss';\n\nconst Header = ({text}) => {\n    return (\n        <div className=\"header\">\n            <h1>\n                {text}\n            </h1>\n        </div>\n    )\n}\n\nexport default Header\n","export const _baseApiURL = \"https://pokeapi.co/api/v2\";\n\nexport const getData = async (url) => {\n    const res = await fetch(url);\n  if (!res.ok) {\n    throw new Error(`Could not fetch ${url}, received ${res.status}`);\n  }\n  return await res.json();\n \n  \n};\n","export const typeColors = {\n    bug: '#729f3f',\n    dragon: '#53a4cf',\n    fairy: '#fdb9e9',\n    fire: '#fd7d24',\n    ghost: '#7b62a3',\n    ground: '#f7de3f',\n    normal: '#a4acaf',\n    pyschic: '#f366b9',\n    steel: '#9eb7b',\n    dark: '#707070',\n    electric: '#eed535',\n    fighting: '#d56723',\n    flying: '#3dc7ef',\n    grass: '#9bcc50',\n    ice: '#51c4e7',\n    poison: '#b97fc9',\n    rock: '#a38c21',\n    water: '#4592c4',\n    psychic: '#3ddd2d'\n}\n\nexport const capitalize = (s) => {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n  }","import React from \"react\";\nimport \"./Badge.scss\";\nimport {typeColors} from '../helpers'\n\n\nconst Badge = ({ types }) => types.map(({type}, i)=><p key={i} className=\"badge\" style={{backgroundColor: typeColors[type.name]}}>{type.name}</p>);\n\nexport default Badge;\n","import React from \"react\";\nimport \"./PokemonItem.scss\";\nimport Badge from \"../Badge/Badge\";\n\nconst PokemonItem = ({ pokemon, onShowSinglePokemon }) => { \n  return (\n    <div className=\"list-item\" onClick={() => onShowSinglePokemon(pokemon.id)}>\n      <div className=\"list-item__content\">\n        <img\n          className=\"list-item__img\"\n          src={`https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png`}\n          alt=\"Pokemon\"\n        />\n        <p className=\"list-item__name\">{pokemon.name}</p>\n       <Badge types={pokemon.types} />\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonItem;\n","import React from \"react\";\nimport \"./Button.scss\";\n\nconst Button = ({ text, onClick, width }) => {\n  return (\n    <button\n      className=\"button\"\n      style={{\n        width,\n      }}\n      onClick={(e) => onClick(e) }\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport \"./PokemonList.scss\";\nimport PokemonItem from \"../PokemonItem/PokemonItem\";\nimport Button from \"../Button/Button\";\n\nconst PokemonList = ({ pokemon, onShowMore, onShowSinglePokemon }) => {\n  console.log(pokemon);\n\n  return (\n    <div className=\"list\">\n      {pokemon.length ? (\n        pokemon.map((p) => (\n          <PokemonItem\n            onShowSinglePokemon={onShowSinglePokemon}\n            key={p.id}\n            pokemon={p}\n          />\n        ))\n      ) : (\n        <h3 className=\"list__not-found\">\n          Nothing found try a different type or click \"Load More\"\n        </h3>\n      )}\n\n      <Button onClick={onShowMore} text=\"Load More\" width=\"100%\" />\n    </div>\n  );\n};\n\nexport default PokemonList;\n","import React from \"react\";\nimport \"./PokemonDetails.scss\";\nimport { capitalize } from \"../helpers\";\n\nconst PokemonDetails = ({ singlePokemon: { id, name, types, stats, weight, moves } }) => {\n  return (\n    <div className=\"details\">\n      <div className=\"details__img-container\">\n        <img\n          className=\"details__img\"\n          src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\n          alt=\"\"\n        />\n      </div>\n      <div className=\"details__list-container\">\n        <h2 className=\"details__name\"><span>{name}</span> <span>#{('00' + id).slice(-3)}</span></h2>\n        <ul className=\"details__list\">\n          <li className=\"details__list-item\">\n            <span className=\"details__term\">Type</span>\n  <span className='details__term-value'>{capitalize(types[0].type.name)} </span>\n          </li>\n          <li className=\"details__list-item\">\n            <span className=\"details__term\">Attack</span>\n            <span className='details__term-value'>{stats[4].base_stat}</span>\n          </li>\n          <li className=\"details__list-item\">\n            <span className=\"details__term\">Defense</span>\n            <span className='details__term-value'>{stats[3].base_stat}</span>\n          </li>\n          <li className=\"details__list-item\">\n            <span className=\"details__term\">HP</span>\n            <span className='details__term-value'>{stats[5].base_stat}</span>\n          </li>\n          <li className=\"details__list-item\">\n            <span className=\"details__term\">SP Attack</span>\n            <span className='details__term-value'>{stats[2].base_stat}</span>\n          </li>\n          <li className=\"details__list-item\">\n            <span className=\"details__term\">SP Defense</span>\n            <span className='details__term-value'>{stats[1].base_stat}</span>\n          </li>\n          <li className=\"details__list-item\">\n            <span className=\"details__term\">Speed</span>\n            <span className='details__term-value'>{stats[0].base_stat}</span>\n          </li>\n          <li className=\"details__list-item\">\n            <span className=\"details__term\">Weihgt</span>\n            <span className='details__term-value'>{weight}</span>\n          </li>\n          <li className=\"details__list-item\">\n            <span className=\"details__term\">Total moves</span>\n            <span className='details__term-value'>{moves.length}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonDetails;\n","import React from \"react\";\nimport './Sninner.css'\n\nfunction Spinner() {\n  return (\n    <div className=\"loadingio-spinner-rolling-8s6xc14p1o\">\n      <div className=\"ldio-jtxwkshkfed\">\n        <div></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { getData, _baseApiURL } from \"../../service/service\";\nimport { capitalize } from \"../helpers\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function Filter({ showPokemonByType }) {\n  const classes = useStyles();\n  const [type, setType] = useState(\"\");\n  const [pokemonTypes, setPokemonTypes] = React.useState([]);\n\n  useEffect(() => {\n    const getTypes = async () => {\n      let response = await getData(`${_baseApiURL}/type/`);\n      setPokemonTypes(response.results);\n    };\n    getTypes();\n  }, []);\n\n  const handleChange = (event) => {\n    setType(event.target.value);\n    showPokemonByType(event.target.value);\n  };\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-label\">Filter by types</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={type}\n          onChange={handleChange}\n        >\n          {pokemonTypes.map(({ name }, idx) => (\n            <MenuItem key={idx} value={name}>\n              {capitalize(name)}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"../Header/Header\";\nimport { getData, _baseApiURL } from \"../../service/service\";\nimport \"./App.scss\";\nimport PokemonList from \"../PockemonList/PokemonList\";\nimport PokemonDetails from \"../PokemonDetails/PokemonDetails\";\nimport Spinner from \"../Spinner/Spinner\";\nimport Filter from \"../Filter/Filter\";\n\nconst App = () => {\n  const [pokenonData, setPokemonData] = useState([]);\n  const [filterPokenonData, setFilterPokemonData] = useState([]);\n  const [nextUrl, setNextUrl] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [isSelected, setIsSelected] = useState(false);\n  const [isFiltered, setIsFiltered] = useState(false);\n  const [error, setError] = useState(false);\n  const [singlePokemon, setSinglePokemon] = useState({});\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        let response = await getData(`${_baseApiURL}/pokemon/?limit=12`);\n        setNextUrl(response.next);\n        await loadPokemon(response.results);\n        setLoading(false);\n      } catch (err) {\n        if (err) {\n          setError(true);\n        }\n      }\n    }\n    fetchData();\n  }, []);\n\n  const loadPokemon = async (data) => {\n    try {\n      let _pokemonData = await Promise.all(\n        data.map(async (pokemon) => {\n          let pokemonRecord = await getData(pokemon.url);\n          return pokemonRecord;\n        })\n      );\n      setPokemonData(_pokemonData);\n    } catch (err) {\n      if (err) {\n        setError(true);\n      }\n    }\n  };\n\n  const onShowMore = async () => {\n    try {\n      setLoading(true);\n      let data = await getData(nextUrl);\n      await loadPokemon(data.results);\n      setNextUrl(data.next);\n      setLoading(false);\n      setIsFiltered(false);\n    } catch (err) {\n      if (err) {\n        setError(true);\n      }\n    }\n  };\n\n  const onShowSinglePokemon = async (id) => {\n    const singlePokemon = await getData(`${_baseApiURL}/pokemon/${id}`);\n\n    setSinglePokemon(singlePokemon);\n    setIsSelected(true);\n  };\n\n  const showPokemonByType = (type) => {\n    setIsFiltered(true);\n    const filteredData = pokenonData.filter((pokemon) =>\n      pokemon.types.some((el) => el.type.name === type)\n    );\n    setFilterPokemonData(filteredData);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header text=\"Pokedex\" />\n\n      {\n        !error ?(\n\n<>\n      <Filter showPokemonByType={showPokemonByType} />\n      <main className=\"App__main\">\n        {(\n          loading ? (\n            <Spinner />\n          ) : (\n            <PokemonList\n              onShowSinglePokemon={onShowSinglePokemon}\n              onShowMore={onShowMore}\n              pokemon={isFiltered ? filterPokenonData : pokenonData}\n            />\n          )\n        )}\n\n        {(\n          isSelected ? (\n            <PokemonDetails singlePokemon={singlePokemon} />\n          ) : (\n            <h2>Catch pokemon!</h2>\n          )\n        )}\n      </main>\n      </>\n        ) : <h2 className=\"App__error\">Error!</h2>\n      }\n      \n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}